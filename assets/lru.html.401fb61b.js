import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as l,c as i,a as n,b as s,w as e,e as u,d as a}from"./app.6acf8a6b.js";const k={},r=u(`<h3 id="\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49" aria-hidden="true">#</a> <strong>\u5B9A\u4E49</strong></h3><p>\u6700\u8FD1\u4F7F\u7528\u7684\u6570\u636E\u662F\u70ED\u95E8\u6570\u636E\uFF0C\u4E0B\u4E00\u6B21\u5F88\u5927\u6982\u7387\u5C06\u4F1A\u518D\u6B21\u88AB\u4F7F\u7528\u3002\u800C\u6700\u8FD1\u5F88\u5C11\u88AB\u4F7F\u7528\u7684\u6570\u636E\uFF0C\u5F88\u5927\u6982\u7387\u4E0B\u4E00\u6B21\u4E0D\u518D\u7528\u5230\u3002\u5F53\u7F13\u5B58\u5BB9\u91CF\u7684\u6EE1\u65F6\u5019\uFF0C\u4F18\u5148\u6DD8\u6C70\u6700\u8FD1\u5F88\u5C11\u4F7F\u7528\u7684\u6570\u636E\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4" aria-hidden="true">#</a> <strong>\u7B97\u6CD5\u6B65\u9AA4</strong></h3><ol><li>\u65B0\u6570\u636E\u76F4\u63A5\u63D2\u5165\u5230\u94FE\u8868\u5C3E\u90E8</li><li>\u7F13\u5B58\u6570\u636E\u88AB\u547D\u4E2D\uFF0C\u5C06\u6570\u636E\u79FB\u52A8\u5230\u94FE\u8868\u5C3E\u90E8</li><li>\u7F13\u5B58\u5DF2\u6EE1\u7684\u65F6\u5019\uFF0C\u79FB\u9664\u94FE\u8868\u5934\u90E8\u6570\u636E\u3002</li></ol><h3 id="\u7528\u9014" tabindex="-1"><a class="header-anchor" href="#\u7528\u9014" aria-hidden="true">#</a> <strong>\u7528\u9014</strong></h3><ul><li>Redis\u3001Guava\u4E2D\u6709\u4F7F\u7528</li></ul><h3 id="\u7B97\u6CD5\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5B9E\u73B0" aria-hidden="true">#</a> <strong>\u7B97\u6CD5\u5B9E\u73B0</strong></h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/** \u94FE\u8868\u8282\u70B9\u5B9A\u4E49 */</span>
<span class="token keyword">class</span> <span class="token class-name">LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">;</span>
  value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">;</span>
  next<span class="token operator">:</span> LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  prev<span class="token operator">:</span> LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>
    key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span>
    value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span>
    next<span class="token operator">:</span> LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    prev<span class="token operator">:</span> LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> prev<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/** \u7B97\u6CD5\u5B9E\u73B0 */</span>
<span class="token keyword">class</span> <span class="token class-name">LRUCache<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** \u7F13\u5B58\u952E\u503C */</span>
  <span class="token keyword">private</span> cacheMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** \u6700\u5927\u7F13\u5B58\u6570\u91CF */</span>
  <span class="token keyword">private</span> <span class="token keyword">readonly</span> limit<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** \u5934\u90E8\u8282\u70B9 */</span>
  <span class="token keyword">private</span> head<span class="token operator">:</span> LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** \u5C3E\u90E8\u8282\u70B9 */</span>
  <span class="token keyword">private</span> tail<span class="token operator">:</span> LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>limit<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>limit <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;limit of cache must &gt; 0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cacheMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>limit <span class="token operator">=</span> limit<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">V</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cacheMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">refreshNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> node<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token function">put</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cacheMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u539F\u7F13\u5B58\u4E0D\u5B58\u5728\u5219\u52A0\u5165\u5230\u961F\u5C3E</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5927\u4E8E\u89C4\u5B9A\u7684size\u5219\u5220\u9664\u6700\u4E0D\u5E38\u7528\u7684</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cacheMap<span class="token punctuation">.</span>size <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> oldKey <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>cacheMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>oldKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5728\u961F\u5C3E\u6DFB\u52A0</span>
      <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedListNode</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addNode</span><span class="token punctuation">(</span>newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>cacheMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5B58\u5728\u5219\u66F4\u65B0\u503C\uFF0C\u5237\u65B0\u8282\u70B9\u4F4D\u7F6E</span>
      node<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">refreshNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/** \u7F13\u5B58\u6570\u636E\u88AB\u547D\u4E2D\uFF0C\u5C06\u6570\u636E\u79FB\u52A8\u5230\u94FE\u8868\u5C3E\u90E8 */</span>
  <span class="token keyword">private</span> <span class="token function">refreshNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/** \u5220\u9664\u8282\u70B9 */</span>
  <span class="token keyword">private</span> <span class="token function">removeNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">K</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5C3E\u8282\u70B9</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5934\u8282\u70B9</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4E2D\u95F4\u8282\u70B9</span>
      node<span class="token punctuation">.</span>prev<span class="token operator">!</span><span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      node<span class="token punctuation">.</span>next<span class="token operator">!</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> node<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> node<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * \u8FD9\u91CC\u5411\u5C3E\u90E8\u8FFD\u52A0\u8282\u70B9
   * <span class="token keyword">@param</span> <span class="token parameter">node</span>
   */</span>
  <span class="token keyword">private</span> <span class="token function">addNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> LinkedListNode<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
      node<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6D88\u9664\u4E4B\u524D\u7684\u8282\u70B9\u7684\u4E0B\u4E00\u4E2A\u5F15\u7528\u5BF9\u8C61,\u9632\u6B62\u65E0\u9650\u5FAA\u73AF</span>
    node<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u4EE3\u7801</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LRUCache<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key4&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cache<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u672C\u6587\u5730\u5740\uFF1A</p>`,11),d={href:"https://confluence.uuyang.cn/universal/algorithm/faq/lru.html",target:"_blank",rel:"noopener noreferrer"},v=a("https://confluence.uuyang.cn/universal/algorithm/faq/lru.html"),m=n("p",null,"\u53C2\u8003",-1),b={href:"https://github.com/lcp-code/code-base/blob/main/typescript/06_linkedlist/LRUCache.ts",target:"_blank",rel:"noopener noreferrer"},h=a("https://github.com/lcp-code/code-base/blob/main/typescript/06_linkedlist/LRUCache.ts"),y={href:"https://blog.csdn.net/weixin_41231928/article/details/120593579",target:"_blank",rel:"noopener noreferrer"},w=a("https://blog.csdn.net/weixin_41231928/article/details/120593579"),f=n("p",null,"\u76F8\u5173\u6587\u7AE0\u63A8\u8350",-1),g=a("js\u6570\u636E\u7C7B\u578B\u5224\u65AD\u7684\u51E0\u79CD\u65B9\u5F0F"),_=a("\u624B\u5199debounce\u3001throttle"),L=a("c\u3001c++\u3001java\u3001go\u3001python\u3001javascript\u7B49\u5404\u8BED\u8A00\u7279\u6027\uFF0C\u85AA\u8D44\u5206\u5E03");function N(q,x){const t=o("ExternalLinkIcon"),p=o("RouterLink");return l(),i("div",null,[r,n("ul",null,[n("li",null,[n("a",d,[v,s(t)])])]),m,n("ul",null,[n("li",null,[n("a",b,[h,s(t)])]),n("li",null,[n("a",y,[w,s(t)])])]),f,n("ul",null,[n("li",null,[s(p,{to:"/universal/data-structure/faq/get-type.html"},{default:e(()=>[g]),_:1})]),n("li",null,[s(p,{to:"/universal/data-structure/faq/debounce-throttle.html"},{default:e(()=>[_]),_:1})]),n("li",null,[s(p,{to:"/universal/lang/lang-feature.html"},{default:e(()=>[L]),_:1})])])])}var M=c(k,[["render",N],["__file","lru.html.vue"]]);export{M as default};
